filterCurrPwdTable(e) {
        const property = e.detail.property;
        const values = e.detail.value;
        const conditions = {};
        conditions[property] = values;
        let _data = [];

        _data = [...this.currPwdData];

        for (const k in conditions) {
            const value = conditions[k];
            if (value.length) {
                _data = _data.filter(_ => value.includes(_[k]));
            }
        }

        this.showCurrPwdData = _data;
    }

    sortTable(data, sortDetail) {
        const sortedData = [...data];
        const [property, direction] = sortDetail.split(',');

        sortedData.sort((a, b) => {
            const valA = a[property];
            const valB = b[property];

            if (typeof valA === 'string' && typeof valB === 'string') {
                return direction === 'asc'
                    ? valA.localeCompare(valB)
                    : valB.localeCompare(valA);
            } else if (typeof valA === 'number' && typeof valB === 'number') {
                return direction === 'asc' ? valA - valB : valB - valA;
            } else {
                return 0;
            }
        });

        return sortedData;
    }

    sortCurrPwdTable(v) {
        this.showCurrPwdData = this.sortTable(this.currPwdData, v.detail.value);
    }

    sortApprvReqTable(v) {
        this.showApprvReqData = this.sortTable(
            this.apprvReqData,
            v.detail.value,
        );
    }

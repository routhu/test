sortTable(data, sortDetail) {
    const sortedData = [...data];
    const [property, direction] = sortDetail.split(',');

    sortedData.sort((a, b) => {
        const valA = a[property];
        const valB = b[property];

        if (typeof valA === 'string' && typeof valB === 'string') {
            return direction === 'asc'
                ? valA.localeCompare(valB)
                : valB.localeCompare(valA);
        } else if (typeof valA === 'number' && typeof valB === 'number') {
            return direction === 'asc' ? valA - valB : valB - valA;
        } else {
            return 0; // Default case for unsupported data types
        }
    });

    return sortedData;
}

sortCurrPwdTable(v) {
    this.showCurrPwdData = this.sortTable(this.currPwdData, v.detail.value);
}

sortApprvReqTable(v) {
    this.showApprvReqData = this.sortTable(this.apprvReqData, v.detail.value);
}

sortReqHistoryTable(v) {
    this.showReqHistData = this.sortTable(this.reqHistData, v.detail.value);
}

handleDropdownData(index, field, event) {
    const { value } = event.detail;

    if (value.length > 2) {
        if (field === 'productGroup') {
            this.loadProductGroupDropdown(value).then(data => {
                this.productGroupData = data; // Update global data
                this.rows[index].productGroupData = data; // Update row-specific data
                this.requestUpdate();
            });
        } else if (field === 'productSubGroup') {
            this.loadSubProductGroupDropdown(value).then(data => {
                this.subProductGroupData = data; // Update global data
                this.rows[index].subProductGroupData = data; // Update row-specific data
                this.requestUpdate();
            });
        } else if (field === 'productsServices') {
            this.loadProductsServicesDropdown(value).then(data => {
                this.productsServicesData = data; // Update global data
                this.rows[index].productsServicesData = data; // Update row-specific data
                this.requestUpdate();
            });
        } else if (field === 'queryType') {
            this.loadQueryTypeDropdown(value).then(data => {
                this.queryTypeData = data; // Update global data
                this.rows[index].queryTypeData = data; // Update row-specific data
                this.requestUpdate();
            });
        }
    }
}
<sc-dropdown-input
    value=""
    border-type="box"
    required=""
    success-message=""
    @sc-select=${v => this.handleDropdownChange(index, 'productGroup', v)}
    @sc-input=${v => this.handleDropdownData(index, 'productGroup', v)}
>
    ${(this.rows[index].productGroupData || this.productGroupData).map(
        option => html`
            <sc-dropdown-option value=${option}>${option}</sc-dropdown-option>
        `,
    )}
</sc-dropdown-input>
